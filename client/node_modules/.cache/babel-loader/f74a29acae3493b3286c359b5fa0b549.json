{"ast":null,"code":"function deserialize(str) {\n  try {\n    return JSON.parse(str);\n  } catch (ex) {\n    return [];\n  }\n}\n\n;\n\nfunction serialize(obj) {\n  try {\n    return JSON.stringify(obj);\n  } catch (ex) {\n    return \"[]\";\n  }\n}\n\n;\n\nfunction addItem(item) {\n  const items = deserialize(localStorage.cart || \"[]\");\n  items.push(item);\n  localStorage.cart = serialize(items);\n  window.dispatchEvent(new Event(\"storage\"));\n}\n\n;\n\nfunction removeItem(item) {\n  const items = deserialize(localStorage.cart || \"[]\");\n  const filtered = items.filter(itm => {\n    console.log(\"proceessing item: \", itm, item, itm.id !== item.id);\n    return itm.id !== item.id;\n  });\n  localStorage.cart = serialize(filtered);\n  window.dispatchEvent(new Event(\"storage\"));\n}\n\n;\n\nfunction updateItem(item) {\n  const items = deserialize(localStorage.cart || \"[]\");\n  items.forEach(itm => {\n    if (itm.id === item.id) {\n      itm = item;\n    }\n\n    ;\n  });\n  localStorage.cart = serialize(items);\n  window.dispatchEvent(new Event(\"storage\"));\n}\n\n;\n\nfunction listItems() {\n  const items = deserialize(localStorage.cart || \"[]\");\n  return items;\n}\n\n;\n\nfunction clearCart() {\n  localStorage.clear();\n  window.dispatchEvent(new Event(\"storage\"));\n}\n\n;\n\nfunction subscribeToCart(callback) {\n  window.addEventListener(\"storage\", callback);\n}\n\n;\nexport { addItem, removeItem, updateItem, listItems, clearCart, subscribeToCart };","map":{"version":3,"sources":["/ubuntu/fictitious/client/src/components/product/CartStorage.js"],"names":["deserialize","str","JSON","parse","ex","serialize","obj","stringify","addItem","item","items","localStorage","cart","push","window","dispatchEvent","Event","removeItem","filtered","filter","itm","console","log","id","updateItem","forEach","listItems","clearCart","clear","subscribeToCart","callback","addEventListener"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,GAArB,EAAyB;AACxB,MAAG;AACF,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAP;AACA,GAFD,CAEC,OAAMG,EAAN,EAAS;AACT,WAAO,EAAP;AACA;AACD;;AAAA;;AACD,SAASC,SAAT,CAAmBC,GAAnB,EAAuB;AACtB,MAAG;AACF,WAAOJ,IAAI,CAACK,SAAL,CAAeD,GAAf,CAAP;AACA,GAFD,CAEC,OAAMF,EAAN,EAAS;AACT,WAAO,IAAP;AACA;AACD;;AAAA;;AAED,SAASI,OAAT,CAAiBC,IAAjB,EAAsB;AACrB,QAAMC,KAAK,GAAGV,WAAW,CAACW,YAAY,CAACC,IAAb,IAAqB,IAAtB,CAAzB;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWJ,IAAX;AACAE,EAAAA,YAAY,CAACC,IAAb,GAAoBP,SAAS,CAACK,KAAD,CAA7B;AACAI,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,SAAV,CAArB;AACA;;AAAA;;AACD,SAASC,UAAT,CAAoBR,IAApB,EAAyB;AACxB,QAAMC,KAAK,GAAGV,WAAW,CAACW,YAAY,CAACC,IAAb,IAAqB,IAAtB,CAAzB;AACA,QAAMM,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAcC,GAAD,IAAS;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,GAAlC,EAAuCX,IAAvC,EAA8CW,GAAG,CAACG,EAAJ,KAAWd,IAAI,CAACc,EAA9D;AACA,WAAOH,GAAG,CAACG,EAAJ,KAAWd,IAAI,CAACc,EAAvB;AACA,GAHgB,CAAjB;AAIAZ,EAAAA,YAAY,CAACC,IAAb,GAAoBP,SAAS,CAACa,QAAD,CAA7B;AACAJ,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,SAAV,CAArB;AACA;;AAAA;;AACD,SAASQ,UAAT,CAAoBf,IAApB,EAAyB;AACxB,QAAMC,KAAK,GAAGV,WAAW,CAACW,YAAY,CAACC,IAAb,IAAqB,IAAtB,CAAzB;AACAF,EAAAA,KAAK,CAACe,OAAN,CAAeL,GAAD,IAAS;AACtB,QAAGA,GAAG,CAACG,EAAJ,KAAWd,IAAI,CAACc,EAAnB,EAAsB;AACrBH,MAAAA,GAAG,GAAGX,IAAN;AACA;;AAAA;AACD,GAJD;AAKAE,EAAAA,YAAY,CAACC,IAAb,GAAoBP,SAAS,CAACK,KAAD,CAA7B;AACAI,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,SAAV,CAArB;AACA;;AAAA;;AACD,SAASU,SAAT,GAAqB;AACpB,QAAMhB,KAAK,GAAGV,WAAW,CAACW,YAAY,CAACC,IAAb,IAAqB,IAAtB,CAAzB;AACA,SAAOF,KAAP;AACA;;AAAA;;AACD,SAASiB,SAAT,GAAoB;AACnBhB,EAAAA,YAAY,CAACiB,KAAb;AACAd,EAAAA,MAAM,CAACC,aAAP,CAAqB,IAAIC,KAAJ,CAAU,SAAV,CAArB;AACA;;AAAA;;AACD,SAASa,eAAT,CAAyBC,QAAzB,EAAkC;AACjChB,EAAAA,MAAM,CAACiB,gBAAP,CAAwB,SAAxB,EAAmCD,QAAnC;AACA;;AAAA;AAED,SACCtB,OADD,EAECS,UAFD,EAGCO,UAHD,EAICE,SAJD,EAKCC,SALD,EAMCE,eAND","sourcesContent":["function deserialize(str){\n\ttry{\n\t\treturn JSON.parse(str);\n\t}catch(ex){\n\t\treturn [];\n\t}\n};\nfunction serialize(obj){\n\ttry{\n\t\treturn JSON.stringify(obj);\n\t}catch(ex){\n\t\treturn \"[]\";\n\t}\n};\n\nfunction addItem(item){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\titems.push(item);\n\tlocalStorage.cart = serialize(items);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction removeItem(item){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\tconst filtered = items.filter((itm) => {\n\t\tconsole.log(\"proceessing item: \", itm, item, (itm.id !== item.id));\n\t\treturn itm.id !== item.id;\n\t});\n\tlocalStorage.cart = serialize(filtered);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction updateItem(item){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\titems.forEach((itm) => {\n\t\tif(itm.id === item.id){\n\t\t\titm = item;\n\t\t};\n\t});\n\tlocalStorage.cart = serialize(items);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction listItems() {\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\treturn items;\n};\nfunction clearCart(){\n\tlocalStorage.clear();\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction subscribeToCart(callback){\n\twindow.addEventListener(\"storage\", callback);\n};\n\nexport {\n\taddItem,\n\tremoveItem,\n\tupdateItem,\n\tlistItems,\n\tclearCart,\n\tsubscribeToCart\n};"]},"metadata":{},"sourceType":"module"}