{"ast":null,"code":"var _jsxFileName = \"/ubuntu/fictitious/client/src/AppError.js\";\nimport React from 'react';\n\nclass AppError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {// You can also log the error to an error reporting service\n    //logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Something went wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\n;\nexport default AppError;","map":{"version":3,"sources":["/ubuntu/fictitious/client/src/AppError.js"],"names":["React","AppError","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB,CAClC;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AACD,WAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACD;;AAtBoC;;AAuBtC;AAGD,eAAeX,QAAf","sourcesContent":["import React from 'react';\n\nclass AppError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n};\n\n\nexport default AppError;\n"]},"metadata":{},"sourceType":"module"}