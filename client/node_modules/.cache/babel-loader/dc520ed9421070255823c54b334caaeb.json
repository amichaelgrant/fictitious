{"ast":null,"code":"function deserialize(str){try{return JSON.parse(str);}catch(ex){return[];}};function serialize(obj){try{return JSON.stringify(obj);}catch(ex){return\"[]\";}};function addItem(item){var items=deserialize(localStorage.cart||\"[]\");var existing=items.find(function(itm){return itm.id===item.id;});if(existing)return;item.quantity=1;items.push(item);localStorage.cart=serialize(items);window.dispatchEvent(new Event(\"storage\"));};function removeItem(item){var items=deserialize(localStorage.cart||\"[]\");var filtered=items.filter(function(itm){return itm.id!==item.id;});console.log(\"filtered: \",filtered);localStorage.cart=serialize(filtered);window.dispatchEvent(new Event(\"storage\"));};function updateItem(item,qty){var items=deserialize(localStorage.cart||\"[]\");items.forEach(function(itm){if(itm.id===item.id){itm.quantity+=qty;if(itm.quantity<1){itm.quantity=1;};};});localStorage.cart=serialize(items);window.dispatchEvent(new Event(\"storage\"));};function listItems(){var items=deserialize(localStorage.cart||\"[]\");return items;};function clearCart(){localStorage.clear();window.dispatchEvent(new Event(\"storage\"));};function subscribeToCart(callback){window.addEventListener(\"storage\",callback);};export{addItem,removeItem,updateItem,listItems,clearCart,subscribeToCart};","map":{"version":3,"sources":["/ubuntu/fictitious/client/src/components/product/CartStorage.js"],"names":["deserialize","str","JSON","parse","ex","serialize","obj","stringify","addItem","item","items","localStorage","cart","existing","find","itm","id","quantity","push","window","dispatchEvent","Event","removeItem","filtered","filter","console","log","updateItem","qty","forEach","listItems","clearCart","clear","subscribeToCart","callback","addEventListener"],"mappings":"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","sourcesContent":["function deserialize(str){\n\ttry{\n\t\treturn JSON.parse(str);\n\t}catch(ex){\n\t\treturn [];\n\t}\n};\nfunction serialize(obj){\n\ttry{\n\t\treturn JSON.stringify(obj);\n\t}catch(ex){\n\t\treturn \"[]\";\n\t}\n};\n\nfunction addItem(item){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\tconst existing = items.find(itm => itm.id === item.id);\n\tif(existing) return;\n\t\n\titem.quantity = 1;\n\titems.push(item);\n\tlocalStorage.cart = serialize(items);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction removeItem(item){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\tconst filtered = items.filter((itm) => {\n\t\treturn itm.id !== item.id;\n\t});\n\tconsole.log(\"filtered: \", filtered);\n\tlocalStorage.cart = serialize(filtered);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction updateItem(item, qty){\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\titems.forEach((itm) => {\n\t\tif(itm.id === item.id){\n\t\t\titm.quantity += qty;\n\t\t\tif(itm.quantity < 1){\n\t\t\t\titm.quantity = 1;\n\t\t\t};\n\t\t};\n\t});\n\tlocalStorage.cart = serialize(items);\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction listItems() {\n\tconst items = deserialize(localStorage.cart || \"[]\");\n\treturn items;\n};\nfunction clearCart(){\n\tlocalStorage.clear();\n\twindow.dispatchEvent(new Event(\"storage\"));\n};\nfunction subscribeToCart(callback){\n\twindow.addEventListener(\"storage\", callback);\n};\n\nexport {\n\taddItem,\n\tremoveItem,\n\tupdateItem,\n\tlistItems,\n\tclearCart,\n\tsubscribeToCart\n};"]},"metadata":{},"sourceType":"module"}